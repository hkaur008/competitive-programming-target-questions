brute force approach:--->
test--> 3
11's NGE = 13
13's NGE = 20
5's NGE = 20        
20's NGE = 21
7's NGE = 21           // order is maintained          
6's NGE = 21
21's NGE =  -1    // no output
3's NGE =  -1
test--> 2
10's NGE =  -1
3's NGE = 7
7's NGE =  -1
test--> 1
1's NGE = 2
2's NGE = 3
3's NGE = 4
4's NGE =  -1
test--> 0
1's NGE =  -1    // bigger no found yet as all the array contains same numbers
1's NGE =  -1
1's NGE =  -1
1's NGE =  -1
1's NGE =  -1

efficient aproach :--->
test--> 3
11's NGE = 13
5's NGE = 20
13's NGE = 20
6's NGE = 21
7's NGE = 21
20's NGE = 21
3's NGE = -1
21's NGE = -1
test--> 2
3's NGE = 7
7's NGE = -1
10's NGE = -1
test--> 1
1's NGE = 2
2's NGE = 3
3's NGE = 4
4's NGE = -1
test--> 0
1's NGE = -1
1's NGE = -1
1's NGE = -1
1's NGE = -1
1's NGE = -1

[Done] exited with code=0 in 1.662 seconds

[Running] cd "c:\Users\Dell\Desktop\github projects\competitive-programming-target-questions\cp elective\Pr2 4-2-2021 copy\11912030_p1\" && g++ p1.cpp -o p1 && "c:\Users\Dell\Desktop\github projects\competitive-programming-target-questions\cp elective\Pr2 4-2-2021 copy\11912030_p1\"p1
test--> 3
11's NGE = 13
5's NGE = 20
13's NGE = 20    //order not maintained 
6's NGE = 21
7's NGE = 21
20's NGE = 21
3's NGE = -1
21's NGE = -1
test--> 2
3's NGE = 7
7's NGE = -1
10's NGE = -1
test--> 1
1's NGE = 2
2's NGE = 3
3's NGE = 4
4's NGE = -1
test--> 0
1's NGE = -1
1's NGE = -1
1's NGE = -1
1's NGE = -1
1's NGE = -1
